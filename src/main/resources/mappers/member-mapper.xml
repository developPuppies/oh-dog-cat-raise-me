<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "https://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.ohdogcat.repository.MemberDao">
  <select id="checkMemberIdUnique" parameterType="String" resultType="Integer">
    select COUNT(*) AS cnt from MEMBER
    where member_id like #{memberId}
  </select>

  <select id="checkEmailUnique" parameterType="String" resultType="Integer">
    select COUNT(*) AS cnt from MEMBER
    where email like #{email}
  </select>

  <insert id="join" parameterType="Member">
    insert into member (
    member_id,
    password,
    email,
    phone
    <if test="address_fk != null">
      , address_fk
    </if>
    ) values (
    #{member_id}, #{password}, #{email}, #{phone}
    <if test="address_fk != null">
      , #{address_fk}
    </if>
    )
  </insert>

  <select id="login" parameterType="Member" resultType="Member">
    select
    member_pk,
    member_id
    from member
    where member_id = #{member_id} and password = #{password}
  </select>

  <select id="findMemberId" parameterType="String" resultType="String">
    select
    member_id
    from member
    where email = #{email}
  </select>

  <update id="updatePassword" parameterType="Member">
    update member
    set password = #{password}
    where
    <if test="member_pk != null">
      member_pk = #{member_pk}
    </if>
    <if test="member_id != null and email != null">
      member_id = #{member_id} and email = #{email}
    </if>
  </update>

  <select id="getMemberMyPageInfo" parameterType="Long" resultType="Member">
    select
    member_id, email, phone, address_fk, created_date
    from member
    where member_pk = #{member_pk}
  </select>

  <update id="updateUserInfo" parameterType="Member">
    update member
    set
    <if test="password != null">
      password = #{password}
    </if>
    <if test="password != null and phone != null">,</if>
    <if test="phone != null">
      phone = #{phone}
    </if>
    where member_pk = #{member_pk}
  </update>

  <select id="getMemberPhone" parameterType="Member" resultType="String">
    select phone
    from member
    where member_pk = #{member_pk} and password = #{password}
  </select>

  <update id="updateUserDefaultAddress" parameterType="Member">
    update member
    set address_fk = #{address_fk}
    where member_pk = #{member_pk}
  </update>

  <select id="getUserInfoAtOrder" parameterType="Long" resultType="Member">
    select
      member_pk, member_id, email, phone, address_fk, point, created_date, membership_fk
    from member
    left join membership on membership_fk = membership_pk
    where member_pk = #{member_pk}
  </select>

  <select id="getUserMembership" parameterType="Member" resultType="Membership">
      select 
        *
      from membership
    <choose>
      <when test="membership_fk != null">
        where membership_pk = #{membership_fk}
      </when>
      <otherwise>
        join member
        on membership_pk = membership_fk and member_pk = #{member_pk}
      </otherwise>
    </choose>
  </select>

  <update id="spendPoint" parameterType="Payment">
    update member
    set point = point - #{used_point}
    where member_pk = #{member_pk}
  </update>

  <update id="accumulatePoint" parameterType="MemberPointDto">
    update member
    set point = point + #{accumulated_point}
    where member_pk = #{member_pk}
  </update>

  <select id="getMemberPoint" parameterType="Long">
    select point
    from member
    where member_pk = #{memberPk}
  </select>

<!--pay_success => 3은 주문 취소시 환불 상태-->
</mapper>